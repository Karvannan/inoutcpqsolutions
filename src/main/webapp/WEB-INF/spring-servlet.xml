<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd    
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<context:property-placeholder location="classpath*:config_local.properties"
		ignore-unresolvable="true" />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${persistence.database}" />
				<property name="showSql" value="${persistence.showSql}" />
				<property name="generateDdl" value="${persistence.generateDdl}" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.connection.provider_class" value="${persistence.providerClass}" />
				<entry key="hibernate.dialect" value="${persistence.dialect}" />
				<entry key="hibernate.connection.driver_class" value="${persistence.driverClass}" />
				<entry key="hibernate.connection.url" value="${persistence.jdbcurl}" />
				<entry key="hibernate.connection.username" value="${persistence.dbuser}" />
				<entry key="hibernate.connection.password" value="${persistence.dbpass}" />
				<entry key="hibernate.c3p0.min_size" value="${connection.minSize}" />
				<entry key="hibernate.c3p0.max_size" value="${connection.maxSize}" />
				<entry key="hibernate.c3p0.timeout" value="${connection.timeout}" />
				<entry key="hibernate.c3p0.max_statements" value="${connection.maxStatements}" />
				<entry key="hibernate.c3p0.maxStatementsPerConnection" value="${connection.maxStatementsPerConnection}" />
				<entry key="hibernate.c3p0.maxStatementCacheNumDeferredCloseThreads"
					value="${connection.statementCacheNumDeferredCloseThreads}" />
				<entry key="hibernate.c3p0.numHelperThreads" value="${connection.numHelperThreads}" />
				<entry key="hibernate.c3p0.maxPoolSize" value="${connection.maxPoolSize}" />
				<entry key="hibernate.c3p0.maxIdleTime" value="${connection.maxIdleTime}" />
				<entry key="hibernate.c3p0.maxIdleTimeExcessConnections"
					value="${connection.maxIdleTimeExcessConnections}" />
			</map>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="persistenceUnitName" value="punit" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		mode="proxy" />

	<bean id="genericDao" class="com.inoutcorp.cpq.opportunity.dao.GenericJpaDao" />

	<bean id="service"
		class="com.inoutcorp.cpq.opportunity.service.impl.OpportunityCRUDServiceImpl">
		<property name="dao" ref="genericDao" />
	</bean>

	<bean id="OpportunityAPI" class="com.inoutcorp.cpq.opportunity.api.OpportunityAPI">
		<property name="service" ref="service" />
	</bean>

</beans>